---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: eks-pod-identity
  labels:
    app.kubernetes.io/instance: eks-pod-identity
    app.kubernetes.io/managed-by: crossplane
    app.kubernetes.io/part-of: platform
    argo-cd.argoproj.io/sync-wave: "5"
spec:
  compositeTypeRef:
    apiVersion: platform.local/v1alpha1
    kind: EKSPodIdentity
  mode: Pipeline
  pipeline:
    # Step 1: Create IAM Role with appropriate trust policy
    - step: patch-and-transform
      functionRef:
        name: function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        resources:
          - name: iamrole
            base:
              apiVersion: iam.aws.upbound.io/v1beta1
              kind: Role
              spec:
                forProvider:
                  assumeRolePolicyDocument: |
                    {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "pods.eks.amazonaws.com"
                          },
                          "Action": [
                            "sts:AssumeRole",
                            "sts:TagSession"
                          ]
                        }
                      ]
                    }
                  forceDetachPolicies: true
                  path: "/"
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.roleName
                toFieldPath: metadata.name
              - type: FromCompositeFieldPath
                fromFieldPath: spec.permissionsBoundary
                toFieldPath: spec.forProvider.permissionsBoundary
                policy:
                  fromFieldPath: Optional
              - type: FromCompositeFieldPath
                fromFieldPath: spec.managedPolicyARNs[*]
                toFieldPath: spec.forProvider.managedPolicyARNs
                policy:
                  fromFieldPath: Optional

          - name: ekspodassociation
            base:
              apiVersion: eks.aws.upbound.io/v1beta1
              kind: PodIdentityAssociation
              spec:
                forProvider:
                  clusterName: ""
                  namespace: ""
                  region: ""
                  roleArnRef:
                    name: ""
                  serviceAccount: ""
              patches:
                - type: FromEnvironmentFieldPath
                  fromFieldPath: clusterName
                  toFieldPath: spec.forProvider.clusterName
                - type: FromEnvironmentFieldPath
                  fromFieldPath: region
                  toFieldPath: spec.forProvider.region
                - type: FromCompositeFieldPath
                  fromFieldPath: spec.roleName
                  toFieldPath: spec.forProvider.roleArnRef.name
                - type: FromCompositeFieldPath
                  fromFieldPath: metadata.namespace
                  toFieldPath: spec.forProvider.namespace
                - type: FromCompositeFieldPath
                  fromFieldPath: spec.serviceAccount
                  toFieldPath: spec.forProvider.serviceAccount
---
apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: ekspodidentities.platform.local
spec:
  group: platform.local
  names:
    kind: EKSPodIdentity
    plural: ekspodidentities
  claimNames:
    kind: EKSPodIdentityClaim
    plural: ekspodidentityclaims
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - roleName
                - serviceAccount
              properties:
                roleName:
                  type: string
                  description: "Name of the IAM role to create"
                policy:
                  type: string
                  description: "IAM policy document to attach to the role"
                managedPolicyARNs:
                  type: array
                  description: "List of managed policy ARNs to attach to the role"
                  items:
                    type: string
                permissionsBoundary:
                  type: string
                  description: "Optional IAM permissions boundary to apply to the role"
                serviceAccount:
                  type: string
                  description: "Service account in format name to bind the IAM role to"
              oneOf:
                - required: ["policy"]
                - required: ["managedPolicyARNs"]
