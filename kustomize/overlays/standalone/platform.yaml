---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: system-platform
  namespace: argocd
spec:
  goTemplate: true

  ## We read in the cluster definition from the tenant repository, using
  ## the configuration to produce a platform application set for each
  generators:
    - git:
        repoURL: TENANT_REPO
        revision: TENANT_REPO_REVISION
        files:
          - path: clusters/NEED_TO_PATCH.yaml
        ## Why? - by design the revisions are sourced git i.e the cluster definitions, meaning
        ## to validate a change you need to, branch, commit, validate and then revert the change
        ## the branch. Locally this is "OK" but it complicates the CI process i.e during e2e,
        ## where we need to validate a branch.
        values:
          override_platform: ignore
          override_tenant: ignore

  ## Sync Policy for the ApplicationSet
  syncPolicy:
    # Prevents ApplicationSet controller from modifying Applications.
    applicationsSync: create-update

  ## Render a platform application set from the cluster definition
  template:
    metadata:
      name: "platform"
      namespace: argocd
      labels:
        app.kubernetes.io/environment: "{{ .environment }}"
        app.kubernetes.io/instance: "{{ .cluster_name }}"
        app.kubernetes.io/managed-by: argocd
        app.kubernetes.io/type: platform

    ## The source to read the platform resources from
    spec:
      project: default
      ## The source is patched by the above
      sources: []
      ## The destination to deploy the resources
      destination:
        server: https://kubernetes.default.svc
        namespace: argocd

      ## Sync policy for the application
      syncPolicy:
        automated:
          selfHeal: true
          prune: true
        retry:
          limit: 20
          backoff:
            duration: 5s
            maxDuration: 1m
        syncOptions:
          - CreateNamespace=false
          - ServerSideApply=true

  templatePatch: |
    ## This allows use to override the revisions if required
    ## ternary "USE THIS" "ELSE_THIS" "IF TRUE"
    {{- $platform_revision := ternary .platform_revision .values.override_platform (eq "ignore" .values.override_platform) }}
    {{- $tenant_revision := ternary .tenant_revision .values.override_tenant (eq "ignore" .values.override_tenant) }}
    spec:
      sources:
        ## Source in the registration application and patch with the relavant
        ## information.
        - repoURL: "{{ .platform_repository }}"
          targetRevision: {{ $platform_revision }}
          path: "apps/registration/standalone"
          kustomize:
            patches:
              - target:
                  kind: Application
                  name: system-registration
                patch: |
                  - op: replace
                    path: /spec/sources/0/repoURL
                    value: "{{ .platform_repository }}"
                  - op: replace
                    path: /spec/sources/0/targetRevision
                    value: "{{ $platform_revision }}"
                  - op: replace
                    path: /spec/sources/0/helm/valueFiles/0
                    value: "$values/{{ .tenant_path }}/clusters/{{ .cluster_name }}.yaml"
                  - op: replace
                    path: /spec/sources/1/repoURL
                    value: "{{ .tenant_repository }}"
                  - op: replace
                    path: /spec/sources/1/targetRevision
                    value: "{{ $tenant_revision }}"
                  - op: replace
                    path: /spec/sources/0/helm/values
                    value: |
                      revision_overrides:
                        platform: "{{ .values.override_platform }}"
                        tenant: "{{ .values.override_tenant }}"

        ## Source in application sets from the platform repository to handle tenant services
        - repoURL: "{{ .platform_repository }}"
          targetRevision: "{{ $platform_revision }}"
          path: "apps/tenant"

        ## Source in the application sets from the platform repository to handle the
        ## system applications
        - repoURL: "{{ .platform_repository }}"
          targetRevision: "{{ $platform_revision }}"
          path: "apps/system"
          kustomize:
            patches:
              - target:
                  kind: ApplicationSet
                  name: system-helm
                patch: |
                  - op: replace
                    path: /spec/generators/0/matrix/generators/0/git/repoURL
                    value: "{{ .platform_repository }}"
                  - op: replace
                    path: /spec/generators/0/matrix/generators/0/git/revision
                    value: "{{ $platform_revision }}"

              - target:
                  kind: ApplicationSet
                  name: system-kustomize
                patch: |
                  - op: replace
                    path: /spec/generators/0/matrix/generators/0/git/repoURL
                    value: "{{ .platform_repository }}"
                  - op: replace
                    path: /spec/generators/0/matrix/generators/0/git/revision
                    value: "{{ $platform_revision }}"
                  - op: replace
                    path: /spec/generators/0/matrix/generators/0/git/files/0/path
                    value: "addons/kustomize/cloud/{{ .cloud_vendor }}/**/kustomize.yaml"
